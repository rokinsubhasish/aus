name: Playwright Tests

on:
  workflow_dispatch: # Allows manual triggering
  # schedule:
  #   - cron: "*/5 * * * *" # Runs every 5 minutes
  push:
    branches: [main, master]

jobs:
  test:
    timeout-minutes: 30 # Reduce timeout to 30 minutes if tests are expected to run faster
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm' # Enable caching for npm dependencies

      # Build Docker Image
      - name: Build Regression Docker Image
        run: docker build --pull -t regression:latest .

        # Run Docker Container
      - name: Run tests in Docker
        run: |
          set -euo pipefail
          docker rm core-e2e-tests || echo "no container from previous run to clean up - will continue"
          mkdir -p ${{ github.workspace }}/PlaywrightTestResults
          docker run --name core-e2e-tests \
            regression:latest || exit_code=$?
          docker cp core-e2e-tests:/regression/playwright-report-all ${{ github.workspace }}/PlaywrightTestResults
          ls ${{ github.workspace }}/PlaywrightTestResults
          docker rm core-e2e-tests
          if [ -n "${exit_code:-}" ]; then
            exit $exit_code
          fi

      # # Install dependencies with caching
      # - name: Install dependencies
      #   run: npm ci

      # # Install Playwright Browsers
      # - name: Install Playwright Browsers
      #   run: npx playwright install --with-deps

      # # Run Playwright tests
      # - name: Run Playwright Tests
      #   run: npx playwright test --reporter=html # Use a lightweight reporter to speed up output

      # Upload Playwright report as an artifact
      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: PlaywrightTestResults/
          retention-days: 7 # Reduce retention days to save storage

      
      # Notify Teams Channel
      - name: Notify Discord Channel
        if: ${{ always() }} # Always run this step
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }} # Pass the webhook URL as a secret
        run: |
          MESSAGE="Playwright Tests have completed. Check the results in the GitHub Actions artifacts: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -H "Content-Type: application/json" -d "{\"text\": \"${MESSAGE}\"}" $TEAMS_WEBHOOK_URL